#version 330 core

uniform vec4  halo_color            = vec4(0.0,0.0,0.0,1.0);
uniform float halo_width_in_pixel   = 0.0;
uniform float percentual_halo_width = 0.0;
uniform bool  screen_aligned        = true;

in vec4  position;
in vec3  normal;
in vec4  color;
in float line_width;
in float depth_offset;

out LINE_GS {
	int   instance_idx;
	vec4  position;
	vec3  normal_eye;
	float line_width;
	vec4  color;
	vec4  halo_color;
	float halo_width_in_pixel;
	float percentual_halo_width;
	float depth_offset;
} vo;

//***** begin interface of view.glsl ***********************************
mat4 get_modelview_matrix();
mat4 get_projection_matrix();
mat4 get_modelview_projection_matrix();
mat4 get_inverse_modelview_matrix();
mat4 get_inverse_modelview_projection_matrix();
mat3 get_normal_matrix();
mat3 get_inverse_normal_matrix();
//***** end interface of view.glsl ***********************************

void main()
{
	vo.normal_eye = screen_aligned ? vec3(0.0,0.0,1.0) : get_normal_matrix()*normal;
	vo.line_width = line_width;
	vo.color = color;
	vo.instance_idx = gl_InstanceID;
	vo.halo_color = halo_color;
	vo.halo_width_in_pixel = halo_width_in_pixel;
	vo.percentual_halo_width = percentual_halo_width;
	vo.depth_offset = depth_offset;
	vo.position = position;
}